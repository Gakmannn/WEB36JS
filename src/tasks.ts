// 1.1.  Написать функцию возвращающюю массив целых чисел от 0 до 10
// 1.2.  Добавить в функцию опциональные параметры начального и конечного значения массива
//     (если конечный элемент массива не передат, то он больше нечального на 10) . Вызвать функцию несколько раз
// 1.3*. Написать функцию возвращающюю массив случайных целых чисел. Функция принимает 1 параметр, количество элементов в будущем массиве

function generateArray(start=0, end=start+10) {
  return [0,1,2,3,4,5,6,7,8,9]
}
console.log(generateArray())
console.log(generateArray(20))
console.log(generateArray(20))
console.log(generateArray(20,50))


// 2.1. В файле html создать пустой div с произвольным id
// 2.2. Получить объект div'а в js при помощи метода document.getElementById(ваш id) as HTMLDivElement
// 2.3. Вывесли в полученный div текст, "Привет, пользователь"
// 2.4. Написать функцию, которая возвращает текст "Привет, пользователь" или "Привет, <имяПользователя>" в зависимости от переданных параметров и использовать её в задании 2.3.

// Есть массив объектов
type Employee = {
  name: string,
  department: string,
  salary: number
} 
const employees: Employee[] = [
  { name: 'Федотова Арина Глебовна', department: 'ads', salary: 2100 },
  { name: 'Голикова Мария Филипповна', department: 'prog', salary: 3500 },
  { name: 'Панин Александр Германович', department: 'ads', salary: 2100 },
  { name: 'Романов Эмиль Макарович', department: 'prog', salary: 3100 },
  { name: 'Смирнов Никита Александрович', department: 'prog', salary: 3800 },
  { name: 'Александрова Майя Вячеславовна', department: 'prog', salary: 4500 },
  { name: 'Крылов Богдан Максимович', department: 'disign', salary: 2100 },
  { name: 'Мухина Айша Константиновна', department: 'disign', salary: 2100 },
]

function showElements(arr:Employee[]) {
  console.log(arr)
  console.log(arr[0])
  console.log(arr[0].name)
  console.log(arr[0].department)
  console.log(arr[0].salary)
  for (let i=0;i<arr.length; i++) {
    console.log(arr[i].name)
  }
  for (let empl of arr) {
    console.log(empl.name)
  }
  const newArr = [4,45,6]
  return newArr
}
const вернулаФункция = showElements(employees)
console.log(вернулаФункция)



// Все функции вызывать несколько раз с разными параметрами
// 3.1. Создать функцию, принимающую массив работников, и возвращающую массив уникальных отделов (department)
// deps.includes
// [ads, prog, disign]
// 3.2. Написать функцию, принимающую массив работников и ключ объекта, по которому сделать сортировку массива
// Учесть, что строковые параметры сортируются при помощи метода localeCompare, а числовые,- вычитанием
// function sortEmpl(arr, key: 'name' | 'department' |'salary') {
// }
// 3.3. Написать функцию, аналогичную описанной в задании 3.2., но сортирующую в обратном порядке
// 3.4. Написать функцию, принимающую массив работников и имя, и возвращающую объект сотрудника или undefined
// 3.5. Написать функцию, принимающую массив работников и название отдела, и возвращающую новый массив, содержащий только сотрудников переданного отдела
// 3.6. Написать функцию, принимающую массив работников и возвращающую сумму зарплат. Вызвать функцию по каждому отделу и по общему массиву

// 3.7. В HTML создать div для кнопок, задать ему id и получить объект div'a в js, аналогично заданию 2.2.
// 3.8. Так же как в 3.7 создать ul (as HTMLUListElement) для вывода списка и div для вывода суммы зарплат

// 3.9. Используя массив, полученный в 3.1. Вывести кнопки с названиями отделов + кнопку "Все отделы"
//      использовать data-атрибут (data-dep), в который поместить название отдела. Для кнопки "Все отделы" data-dep="all"
// 3.10. Используя div, полученный в задании 3.7
// div37.addEventListener('click', function (e) {
//   const target = e.target as HTMLElement
//   if (target.tagName == 'BUTTON' && target.dataset.dep) {
//      в зависимости от значения dep выводить в список (ul 3.8) тех сотрудников, которые работают в данном отделе, либо всех, если target.dataset.dep=='all'. Используем логическое ветвление и уже написанные функции
//      в div (3.8) выводить сумму зарплат
//   }
// })

